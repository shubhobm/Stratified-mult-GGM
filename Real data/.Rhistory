data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero indices in B
non.zero.B1 = which(final_model$B.refit != 0, arr.ind=T)
B.df1 = data.table(mRNA = X.names[non.zero.B1[,1]],
RNAseq = Y.names[non.zero.B1[,2]])
invisible(B.df1[, Value := 0])
for(i in 1:nrow(B.df1)){
invisible(B.df1[, Value := final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]])
}
head(B.df1)
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[1]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero indices in B
non.zero.B1 = which(final_model$B.refit != 0, arr.ind=T)
B.df1 = data.table(mRNA = X.names[non.zero.B1[,1]],
RNAseq = Y.names[non.zero.B1[,2]])
invisible(B.df1[, Value := 0])
for(i in 1:nrow(B.df1)){
invisible(B.df1[, Value := final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]])
}
head(B.df1)
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[4]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero indices in B
non.zero.B1 = which(final_model$B.refit != 0, arr.ind=T)
B.df1 = data.table(mRNA = X.names[non.zero.B1[,1]],
RNAseq = Y.names[non.zero.B1[,2]])
invisible(B.df1[, Value := 0])
for(i in 1:nrow(B.df1)){
invisible(B.df1[, Value := final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]])
}
head(B.df1)
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[5]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero indices in B
non.zero.B1 = which(final_model$B.refit != 0, arr.ind=T)
B.df1 = data.table(mRNA = X.names[non.zero.B1[,1]],
RNAseq = Y.names[non.zero.B1[,2]])
invisible(B.df1[, Value := 0])
for(i in 1:nrow(B.df1)){
invisible(B.df1[, Value := final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]])
}
head(B.df1)
summary(final_model$Theta_refit$Omega)
summary(final_model$Theta_refit$Omega[[1]])
summary(final_model$B.refit)
table(final_model$B.refit)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
table(final_model$B.refit)
unique(final_model$B.refit)
length(unique(final_model$B.refit))
B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]]
B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]
final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]
i
i=1
final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]
non.zero.B1 = which(final_model$B.refit != 0, arr.ind=T)
B.df1 = data.table(mRNA = X.names[non.zero.B1[,1]],
RNAseq = Y.names[non.zero.B1[,2]])
invisible(B.df1[, Value := 0])
for(i in 1:nrow(B.df1)){
invisible(B.df1[i, Value := final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],1]])
}
head(B.df1)
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,K] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df1)){
invisible(B.df1[i, Value := final_model$B.refit[non.zero.B1[i,1],non.zero.B1[i,2],K]])
}
B.values[[k]] = B.df
}
B.values[[k]]
B.values[[1]]
B.values[[2]]
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,K] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df1)){
invisible(B.df1[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],K]])
}
B.values[[k]] = B.df
}
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,K] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df1[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],K]])
}
B.values[[k]] = B.df
}
B.values
non.zero.B = which(final_model$B.refit[,,K] != 0, arr.ind=T)
K
dim(non.zero.B)
K=1
non.zero.B = which(final_model$B.refit[,,K] != 0, arr.ind=T)
dim(non.zero.B)
dim(which(final_model$B.refit[,,1] != 0, arr.ind=T))
dim(which(final_model$B.refit[,,2] != 0, arr.ind=T))
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,K] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],K]])
}
B.values[[k]] = B.df
}
B.values
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,K] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],K]])
}
B.values[[k]] = B.df
}
B.values
B.refit[,,K]
summary(as.numeric(B.refit[,,K]))
summary(as.numeric(B.refit[,,1]))
summary(as.numeric(final_model$B.refit[,,1]))
summary(as.numeric(final_model$B.refit[,,2]))
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],K]])
}
B.values[[k]] = B.df
}
B.values
summary(as.numeric(final_model$B.refit[,,k]))
summary(as.numeric(final_model$B.refit[,,1]))
summary(as.numeric(final_model$B.refit[,,2]))
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df
}
B.values
names(data)
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df[order(abs(Value))]
}
B.values
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df[order(abs(Value), decr=T)]
}
B.values
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df[order(abs(Value), decreasing=T)]
}
B.values
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df[order(abs(Value), decreasing=T)]
}
B.values
# non-zero values in Theta
K = 2
theta.values = vector("list",K)
dim(final_model$Theta_refit$Theta[[k]])
diag(final_model$Theta_refit$Theta[[k]])
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th[,1] < non.zero.Th[,2]
length(non.zero.Th[,1] < non.zero.Th[,2])
dim(non.zero.Th)
non.zero.Th[,1]
sum(non.zero.Th[,1] < non.zero.Th[,2])
length(non.zero.Th[,1] < non.zero.Th[,2])
dim(non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],])
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
dim(non.zero.Th)
View(non.zero.Th)
nrow(non.zero.Th)/166^2
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(RNASeq1 = X.names[non.zero.Th[,1]], RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.B[i,1],non.zero.B[i,2]]])
}
k
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
Th.values = vector("list",K)
for(k in 1:K){
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(RNASeq1 = X.names[non.zero.Th[,1]], RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
}
Th.values
invisible(Th.df[, Value := round(Value, 3)])
# non-zero values in Theta
K = 2
Th.values = vector("list",K)
for(k in 1:K){
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(RNASeq1 = X.names[non.zero.Th[,1]], RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
invisible(Th.df[, Value := round(Value, 3)])
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
}
Th.values
min(Th.values)
min(Th.values)[Value != 0,Value]
min(Th.values[[1]][Value != 0,Value])
min(abs(Th.values[[1]][Value != 0,Value])
)
K = 2
Th.values = vector("list",K)
for(k in 1:K){
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(RNASeq1 = X.names[non.zero.Th[,1]], RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
# invisible(Th.df[, Value := round(Value, 3)])
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
}
Th.values
min(abs(Th.values[[1]][Value != 0,Value])
)
K = 2
Th.values = vector("list",K)
for(k in 1:K){
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(RNASeq1 = X.names[non.zero.Th[,1]], RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
invisible(Th.df[, Value := round(Value, 5)])
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
}
Th.values
min(abs(B.values[[1]][Value != 0,Value]))
min(abs(B.values[[2]][Value != 0,Value]))
min(abs(Th.values[[1]][Value != 0,Value]))
min(abs(Th.values[[2]][Value != 0,Value]))
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(mRNA = X.names[non.zero.B[,1]], RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df[order(abs(Value), decreasing=T)]
}
B.values
K = 2
Th.values = vector("list",K)
for(k in 1:K){
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(RNASeq1 = X.names[non.zero.Th[,1]], RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
# invisible(Th.df[, Value := round(Value, 5)])
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
}
Th.values
rm(list=ls())
library(data.table)
final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/final_model.rds")
# final_model = readRDS("C:/Study/Stratified-mult-GGM/Real data/model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
groups = c("ER+","ER-")
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(SampleGroup = groups[k],
mRNA = X.names[non.zero.B[,1]],
RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df[order(abs(Value), decreasing=T)]
}
B.values
# non-zero values in Theta
K = 2
Th.values = vector("list",K)
for(k in 1:K){
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(SampleGroup = groups[k],
RNASeq1 = X.names[non.zero.Th[,1]],
RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
# invisible(Th.df[, Value := round(Value, 5)])
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
}
Th.values
getwd()
rm(list=ls())
setwd("C:/Study/Stratified-mult-GGM/Real data/")
library(data.table)
final_model = readRDS("final_model.rds")
# final_model = readRDS("model_list.rds")[[2]]
# load data
data = readRDS("C:/Study/Stratified-mult-GGM/Real data/processed_data.rds")
X.names = colnames(data$X.list1[[1]])
Y.names = colnames(data$Y.list1[[1]])
# non-zero values in B
K = 2
groups = c("ER+","ER-")
B.values = vector("list",K)
for(k in 1:K){
non.zero.B = which(final_model$B.refit[,,k] != 0, arr.ind=T)
B.df = data.table(SampleGroup = groups[k],
mRNA = X.names[non.zero.B[,1]],
RNAseq = Y.names[non.zero.B[,2]])
invisible(B.df[, Value := 0])
for(i in 1:nrow(B.df)){
invisible(B.df[i, Value := final_model$B.refit[non.zero.B[i,1],non.zero.B[i,2],k]])
}
B.values[[k]] = B.df[order(abs(Value), decreasing=T)]
}
B.values
fwrite(rbindlist(B.values), file="B_values.csv", sep=",")
# non-zero values in Theta
K = 2
Th.values = vector("list",K)
for(k in 1:K){
non.zero.Th = which(final_model$Theta_refit$Theta[[k]] != 0, arr.ind=T)
non.zero.Th = non.zero.Th[non.zero.Th[,1] < non.zero.Th[,2],] # just take lower triangle
Th.df = data.table(SampleGroup = groups[k],
RNASeq1 = X.names[non.zero.Th[,1]],
RNAseq2 = Y.names[non.zero.Th[,2]])
invisible(Th.df[, Value := 0])
for(i in 1:nrow(Th.df)){
invisible(Th.df[i, Value := final_model$Theta_refit$Theta[[k]][non.zero.Th[i,1],non.zero.Th[i,2]]])
}
# invisible(Th.df[, Value := round(Value, 5)])
Th.values[[k]] = Th.df[order(abs(Value), decreasing=T)]
}
Th.values
fwrite(rbindlist(Th.values), file="Theta_values.csv", sep=",")
dim(final_model$B.refit)
