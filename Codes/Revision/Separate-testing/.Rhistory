rm(list=ls())
setwd('c:/Study/Stratified-mult-GGM/Codes/Revision/testing/')
analyze = function(list, broken=FALSE, array=NULL){
matrix.list = list()
if(broken){
for(i in array){
load(paste0(list,"_",i,".Rda"))
matrix.list[[i]] = matrix(unlist(out.mat), ncol=4, byrow=T)
matrix = matrix(unlist(matrix.list), ncol=4, byrow=T)
output = rbind(round(apply(simplify2array(matrix.list), 2, mean),3),
round(apply(simplify2array(matrix.list), 2, sd),3))
}
} else{
load(paste0(list,".Rda"))
matrix = matrix(unlist(out.mat), ncol=4, byrow=T)
output =   rbind(round(apply(matrix,2,mean),3),
round(apply(matrix,2,sd),3))
}
output
}
analyze.size = function(list, broken=FALSE){
vec.list = list()
if(broken){
for(i in 1:5){
load(paste0(list,"_",i,".Rda"))
vec.list[[i]] = as.numeric(unlist(out.mat))
vector = as.numeric(unlist(vec.list))
}
} else{
load(paste0(list,".Rda"))
vector = as.numeric(unlist(out.mat))
}
c(round(mean(vector),3), round(sd(vector),3))
}
analyze("testnew_n100p60q30")
analyze("testnew_n100p60q30", broken=T, array=1:5)
analyze("testnew_n200p60q30", broken=T, array=1:5)
analyze("testnew_n100p30q60", broken=T, array=1:5)
analyze("testnew_n200p30q60", broken=T, array=1:5)
analyze("testnew_n150p200q200", broken=T, array=1:5)
analyze("testnew_n150p300q300", broken=T, array=1:5)
analyze("testnew_n300p300q300", broken=T, array=1:5)
analyze("testnew_n100p200q200modelB", broken=T, array=1:5)
analyze("testnew_n200p200q200modelB", broken=T, array=1:5)
analyze("testnew_n300p200q200modelB", broken=T, array=1:5)
rm(list=ls())
setwd('c:/Study/Stratified-mult-GGM/Codes/Revision/testing/')
analyze = function(list, broken=FALSE, array=NULL){
matrix.list = list()
if(broken){
for(i in array){
load(paste0(list,"_",i,".Rda"))
matrix.list[[i]] = matrix(unlist(out.mat), ncol=4, byrow=T)
matrix = matrix(unlist(matrix.list), ncol=4, byrow=T)
output = rbind(round(apply(simplify2array(matrix.list), 2, mean),3),
round(apply(simplify2array(matrix.list), 2, sd),3))
}
} else{
load(paste0(list,".Rda"))
matrix = matrix(unlist(out.mat), ncol=4, byrow=T)
output =   rbind(round(apply(matrix,2,mean),3),
round(apply(matrix,2,sd),3))
}
output
}
analyze.size = function(list, broken=FALSE){
vec.list = list()
if(broken){
for(i in 1:5){
load(paste0(list,"_",i,".Rda"))
vec.list[[i]] = as.numeric(unlist(out.mat))
vector = as.numeric(unlist(vec.list))
}
} else{
load(paste0(list,".Rda"))
vector = as.numeric(unlist(out.mat))
}
c(round(mean(vector),3), round(sd(vector),3))
}
analyze("testnew_n100p60q30", broken=T, array=1:5)
analyze("testnew_n200p60q30", broken=T, array=1:5)
analyze("testnew_n100p30q60", broken=T, array=1:5)
analyze("testnew_n200p30q60", broken=T, array=1:5)
analyze("testnew_n150p200q200", broken=T, array=1:5)
analyze("testnew_n150p300q300", broken=T, array=1:5)
analyze("testnew_n300p300q300", broken=T, array=1:5)
analyze("testnew_n100p200q200modelB", broken=T, array=1:5)
analyze("testnew_n200p200q200modelB", broken=T, array=1:5)
analyze("testnew_n300p200q200modelB", broken=T, array=1:5)
analyze.size("outtestsizenew_n100p60q30")
analyze.size("testsizenew_n200p60q30", broken=T)
analyze.size("outtestsizenew_n100p30q60")
analyze.size("testsizenew_n200p30q60", broken=T)
analyze.size("outtestsizenew_n150p200q200")
analyze.size("testsizenew_n150p200q200", broken=T)
# analyze.size("outtestsizenew_n150p300q300", broken=T)
analyze.size("testsizenew_n300p300q300", broken=T)
analyze.size("testsizenew_n100p200q200modelB", broken=T)
analyze.size("outtestsizenew_n200p200q200modelB", broken=T)
analyze.size("testsizenew_n300p200q200modelB", broken=T)
rm(list=ls())
setwd('c:/Study/Stratified-mult-GGM/Codes/Revision/Separate-testing/')
analyze = function(list, broken=FALSE, array=NULL){
matrix.list = list()
if(broken){
for(i in array){
load(paste0(list,"_",i,".Rda"))
matrix.list[[i]] = matrix(unlist(out.mat), ncol=4, byrow=T)
matrix = matrix(unlist(matrix.list), ncol=4, byrow=T)
output = rbind(round(apply(simplify2array(matrix.list), 2, mean),3),
round(apply(simplify2array(matrix.list), 2, sd),3))
}
} else{
load(paste0(list,".Rda"))
matrix = matrix(unlist(out.mat), ncol=4, byrow=T)
output =   rbind(round(apply(matrix,2,mean),3),
round(apply(matrix,2,sd),3))
}
output
}
analyze.size = function(list, broken=FALSE){
vec.list = list()
if(broken){
for(i in 1:5){
load(paste0(list,"_",i,".Rda"))
vec.list[[i]] = as.numeric(unlist(out.mat))
vector = as.numeric(unlist(vec.list))
}
} else{
load(paste0(list,".Rda"))
vector = as.numeric(unlist(out.mat))
}
c(round(mean(vector),3), round(sd(vector),3))
}
analyze("testsep_n100p60q30_1", broken=F)
analyze("testsep_n200p60q30_1", broken=F)
setwd('c:/Study/My Projects/Stratified-mult-GGM/Codes/Revision/Separate-testing/')
analyze("testsep_n100p60q30_1", broken=F)
analyze("testsep_n200p60q30_1", broken=F)
analyze("testsep_n100p30q60_1", broken=F)
analyze("testsep_n200p30q60_1", broken=F)
analyze("testsep_n150p200q200_1", broken=F)
analyze("testsep_n150p300q300_1", broken=F)
analyze("testsep_n300p300q300_1", broken=F)
analyze("testsep_n100p200q200modelB_1", broken=F)
analyze("testsep_n200p200q200modelB_1", broken=F)
analyze("testsep_n300p200q200modelB_1", broken=F)
rm(list=ls())
setwd('c:/Study/My Projects/Stratified-mult-GGM/Codes/Revision/Separate-testing/')
analyze = function(list, broken=FALSE, array=NULL){
matrix.list = list()
if(broken){
for(i in array){
load(paste0(list,"_",i,".Rda"))
matrix.list[[i]] = matrix(unlist(out.mat), ncol=4, byrow=T)
matrix = matrix(unlist(matrix.list), ncol=4, byrow=T)
output = rbind(round(apply(simplify2array(matrix.list), 2, mean),3),
round(apply(simplify2array(matrix.list), 2, sd),3))
}
} else{
load(paste0(list,".Rda"))
matrix = matrix(unlist(out.mat), ncol=4, byrow=T)
output =   rbind(round(apply(matrix,2,mean),3),
round(apply(matrix,2,sd),3))
}
output
}
analyze.size = function(list, broken=FALSE){
vec.list = list()
if(broken){
for(i in 1:5){
load(paste0(list,"_",i,".Rda"))
vec.list[[i]] = as.numeric(unlist(out.mat))
vector = as.numeric(unlist(vec.list))
}
} else{
load(paste0(list,".Rda"))
vector = as.numeric(unlist(out.mat))
}
c(round(mean(vector),3), round(sd(vector),3))
}
analyze("testsep_n100p60q30_1", broken=F)
analyze("testsep_n200p60q30_1", broken=F)
analyze("testsep_n100p30q60_1", broken=F)
analyze("testsep_n200p30q60_1", broken=F)
