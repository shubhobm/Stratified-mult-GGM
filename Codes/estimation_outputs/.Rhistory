load("D:/Study/My projects/Stratified-mult-GGM/Codes/out_n100p60q30k5.Rda")
eval.list
apply(simplify2array(eval.list),2:3,mean)
lapply(eval.list,class)
for(i in 1:50){eval.list[[i]] = as.matrix(eval.list[[i]])}
lapply(eval.list,class)
apply(simplify2array(eval.list),2:3,mean)
apply(simplify2array(eval.list),1:2,mean)
z = matrix(0,50,6)
for(i in 1:50){ilist=eval.list[[i]]
z[i,] = ilist[which.min(ilist$HBIC),-(1:3)]}
for(i in 1:50){ilist=eval.list[[i]]
z[i,] = ilist[which.min(ilist[,3]),-(1:3)]}
z
apply(z,2,mean)
apply(z,2,sd)
load("D:/Study/My projects/Stratified-mult-GGM/Codes/out_n100p60q30k5_1step.Rda")
for(i in 1:50){ilist=eval.list[[i]]
z[i,] = ilist[which.min(ilist[,2]),-(1:3)]}
ilist
i
ilist[which.min(ilist[,2]),-(1:3)]
rm(list=ls())
setwd('d:/Study/My projects/Stratified-mult-GGM/Codes/estimation_outputs/')
analyze = function(list, broken=FALSE, array=NULL){
matrix.list = list()
if(broken){
output = list()
index = 1
for(i in array){
load(paste0(list,"_",i,".Rda"))
output[[index]] = rbind(apply(simplify2array(out.mat), 1:2, mean),
apply(simplify2array(out.mat), 1:2, sd))
index = index+1
}
output = round(apply(simplify2array(output), 1:2, mean),3)
} else{
load(paste0(list,".Rda"))
matrix = matrix(unlist(out.mat), ncol=4, byrow=T)
output =  rbind(round(apply(simplify2array(out.mat), 1:2, mean),3),
round(apply(simplify2array(out.mat), 1:2, sd),3))
}
output
}
analyze.size = function(list, broken=FALSE){
vec.list = list()
if(broken){
for(i in 1:5){
load(paste0(list,"_",i,".Rda"))
vec.list[[i]] = as.numeric(unlist(out.mat))
vector = as.numeric(unlist(vec.list))
}
} else{
load(paste0(list,".Rda"))
vector = as.numeric(unlist(out.mat))
}
c(round(mean(vector),3), round(sd(vector),3))
}
analyze("est_n100p60q30")
analyze("est_n100p30q60")
analyze("est_n150p200q200", broken=T, array=1:5)
analyze("est_n150p300q300", broken=T, array=1:5)
analyze("est_n100p200q200modelB", broken=T, array=1:5)
analyze("est_n200p200q200modelB", broken=T, array=1:5)
analyze("estmis_n100p60q30")
analyze("estmis_n100p30q60")
analyze("estmis_n150p200q200", broken=T, array=1:4)
analyze("estmis_n150p300q300", broken=T, array=1:4)
analyze("est1step_n100p60q30")
rm(list=ls())
setwd('d:/Study/My projects/Stratified-mult-GGM/Codes/estimation_outputs/')
analyze = function(list, broken=FALSE, array=NULL){
matrix.list = list()
if(broken){
output = list()
index = 1
for(i in array){
load(paste0(list,"_",i,".Rda"))
output[[index]] = rbind(apply(simplify2array(out.mat), 1:2, mean),
apply(simplify2array(out.mat), 1:2, sd))
index = index+1
}
output = round(apply(simplify2array(output), 1:2, mean),3)
} else{
load(paste0(list,".Rda"))
matrix = matrix(unlist(out.mat), ncol=4, byrow=T)
output =  rbind(round(apply(simplify2array(out.mat), 1:2, mean),3),
round(apply(simplify2array(out.mat), 1:2, sd),3))
}
output
}
analyze.size = function(list, broken=FALSE){
vec.list = list()
if(broken){
for(i in 1:5){
load(paste0(list,"_",i,".Rda"))
vec.list[[i]] = as.numeric(unlist(out.mat))
vector = as.numeric(unlist(vec.list))
}
} else{
load(paste0(list,".Rda"))
vector = as.numeric(unlist(out.mat))
}
c(round(mean(vector),3), round(sd(vector),3))
}
analyze("est_n100p60q30")
analyze("est1step_n100p60q30")
